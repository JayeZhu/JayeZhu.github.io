(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{427:function(t,a,v){"use strict";v.r(a);var s=v(15),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),v("p",[t._v("HTML 虽然简单，但是有许多需要注意的点，需要深挖的东西。")])]),t._v(" "),v("h2",{attrs:{id:"元素分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#元素分类"}},[t._v("#")]),t._v(" 元素分类")]),t._v(" "),v("p",[t._v("在 HTML4.01 中，主要将元素分为块级元素和行内元素，为了要求还添加了行内块元素。")]),t._v(" "),v("h3",{attrs:{id:"块级元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#块级元素"}},[t._v("#")]),t._v(" 块级元素")]),t._v(" "),v("p",[t._v("块级元素占据其父元素的整个宽度，常见的块级元素有：div、ul、ol、dl、dt、dd、h1~h6、p")]),t._v(" "),v("h3",{attrs:{id:"行内元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#行内元素"}},[t._v("#")]),t._v(" 行内元素")]),t._v(" "),v("p",[t._v("行内元素只占据它对应标签的边框所包含的空间，常见的行内标签有：a、b、span、strong、sub、button、input")]),t._v(" "),v("h3",{attrs:{id:"行内块元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#行内块元素"}},[t._v("#")]),t._v(" 行内块元素")]),t._v(" "),v("p",[t._v("行内块元素拥有块级元素和行内元素的特点，占据自身空间，但是能够像块级元素那样控制宽高边距等，常见的行内块元素有：input、img、textarea等")]),t._v(" "),v("h3",{attrs:{id:"块级元素-行内块元素的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#块级元素-行内块元素的区别"}},[t._v("#")]),t._v(" 块级元素，行内块元素的区别")]),t._v(" "),v("ul",[v("li",[t._v("块级元素占据父元素宽度，而行内元素占据自身宽度")]),t._v(" "),v("li",[t._v("块级元素可以包裹块级元素和行内元素，而行内元素只能包裹文本和其他行内元素")]),t._v(" "),v("li",[t._v("块级元素可以设置宽高和内外边距，而行内元素中的非替换行内元素是设置宽高无效，设置上下的内外边距不会对其他元素差生影响。")])]),t._v(" "),v("h2",{attrs:{id:"html-语义化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#html-语义化"}},[t._v("#")]),t._v(" HTML 语义化")]),t._v(" "),v("h3",{attrs:{id:"什么是语义化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是语义化"}},[t._v("#")]),t._v(" 什么是语义化")]),t._v(" "),v("p",[t._v("语义化就是根据页面的结构化，选择合适的标签，便于开发者阅读和写出更优雅的代码的同时，让浏览器的爬虫和机器更好地解析")]),t._v(" "),v("h3",{attrs:{id:"为什么需要语义化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要语义化"}},[t._v("#")]),t._v(" 为什么需要语义化")]),t._v(" "),v("ul",[v("li",[t._v("在没有 CSS 的情况下，页面也能呈现出很好的内容结构供使用者阅读")]),t._v(" "),v("li",[t._v("title、alt 的有效运用能够提升用户体验")]),t._v(" "),v("li",[t._v("有利于 SEO：提供层次分明的结构给搜索引擎，并有助于爬虫更高效的获取信息")]),t._v(" "),v("li",[t._v("设备通过语义化标签的意义渲染网页，阅读器通过强调的语义重读文本")]),t._v(" "),v("li",[t._v("语义化标签更具备可读性，方便团队开发和维护")])]),t._v(" "),v("h2",{attrs:{id:"html-书写规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#html-书写规范"}},[t._v("#")]),t._v(" HTML 书写规范")]),t._v(" "),v("ul",[v("li",[t._v("多使用语义化标签来代替 div 和 span 等无语义标签")]),t._v(" "),v("li",[t._v("除使用表格外，不使用 table 进行布局，否则引起回流会消耗大量内存")]),t._v(" "),v("li",[t._v("非 logo 类的 image 都写明 alt，提高用户体验，提供更好的 SEO")]),t._v(" "),v("li",[t._v("重要的内容写在前面，因为搜索引擎从前往后进行解析")]),t._v(" "),v("li",[t._v("style 标签应放在 head 标签里，防止因 style 未加载完成出现的 样式闪烁问题")]),t._v(" "),v("li",[t._v("script 标签放在 body尾部，避免 script 标签阻塞文本解析")])]),t._v(" "),v("h2",{attrs:{id:"前端注意哪些-seo"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端注意哪些-seo"}},[t._v("#")]),t._v(" 前端注意哪些 SEO")]),t._v(" "),v("p",[t._v("除开书写规范，还应该遵守")]),t._v(" "),v("ul",[v("li",[t._v("合理的 title、description 和 keywords，三者权重逐个减小")]),t._v(" "),v("li",[t._v("重要内容不使用 js 输出，爬虫无法获取")]),t._v(" "),v("li",[t._v("提高网站速度")]),t._v(" "),v("li",[t._v("少用 iframe，搜索引擎不会抓取其中内容")])]),t._v(" "),v("h2",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),v("p",[t._v("前端应多使用语义化标签，做好 SEO，帮助网页获取更好的搜索排名")])])}),[],!1,null,null,null);a.default=_.exports}}]);